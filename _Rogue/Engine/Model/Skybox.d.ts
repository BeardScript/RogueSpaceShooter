import { Texture } from "three";
declare class SkyboxClass {
    private _enabled;
    private _mode;
    private _scene;
    private _camera;
    private _sky;
    private _directionalLight;
    private _showSun;
    private _inclination;
    private _azimuth;
    private _sunSphere;
    private _serializedSkybox;
    private _onUpdate;
    private _onStop;
    private _onPlay;
    private _cubemapTop;
    private _cubemapBottom;
    private _cubemapFront;
    private _cubemapBack;
    private _cubemapRight;
    private _cubemapLeft;
    private _cubeTexture;
    sunSpeed: number;
    enabled: boolean;
    mode: 'procedural' | 'cubemap' | '360';
    cubemapTop: Texture;
    cubemapBottom: Texture;
    cubemapFront: Texture;
    cubemapBack: Texture;
    cubemapRight: Texture;
    cubemapLeft: Texture;
    fov: number;
    mieDirectionalG: number;
    mieCoefficient: number;
    turbidity: number;
    rayleigh: number;
    luminance: number;
    inclination: number;
    azimuth: number;
    showSun: boolean;
    init(json?: SkyboxSerialization): void;
    private initProceduralSkybox;
    private initCubemapSkybox;
    toJSON(): SkyboxSerialization;
    fromJSON(json: SkyboxSerialization): void;
    private initWithDefaultValues;
    private getDefaultJSON;
    private setSunPosition;
    private render;
    private createCamera;
}
export declare let Skybox: SkyboxClass;
export declare type SkyboxSerialization = {
    _mode: 'procedural' | 'cubemap' | '360';
    _showSun?: boolean;
    inclination?: number;
    azimuth?: number;
    mieDirectionalG?: number;
    mieCoefficient?: number;
    turbidity?: number;
    rayleigh?: number;
    luminance?: number;
    _sunSpeed?: number;
    _cubemapTop?: Texture | undefined;
    _cubemapBottom?: Texture | undefined;
    _cubemapFront?: Texture | undefined;
    _cubemapBack?: Texture | undefined;
    _cubemapRight?: Texture | undefined;
    _cubemapLeft?: Texture | undefined;
};
export {};
